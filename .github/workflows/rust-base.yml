name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        rust: [stable, beta, nightly] # Test against multiple Rust versions

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache Cargo dependencies
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Install Rust
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      # Build the project
      - name: Build
        run: cargo build --verbose

      # Run tests
      - name: Run Tests
        run: cargo test --verbose

      # Run linting
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      # Run formatting check
      - name: Check Formatting
        run: cargo fmt --all -- --check
